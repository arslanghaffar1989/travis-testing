name: EC2 runner workflow

on: [push]

jobs:
  build:
    runs-on: [self-hosted, linux]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Add your build steps here

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1

    - name: Start EC2 instance
      env:
        AMI_ID: ami-0d88304f9e96313f5
        INSTANCE_TYPE: t2.micro
        SECURITY_GROUP_ID: sg-0c8fda260d91f58dd
        SUBNET_ID: subnet-03ca8cb69c5f65f84
        KEY_NAME: arslan-test-key
      run: |
        instance_id=$(aws ec2 run-instances --image-id $AMI_ID --count 1 --instance-type $INSTANCE_TYPE --key-name $KEY_NAME --security-group-ids $SECURITY_GROUP_ID --subnet-id $SUBNET_ID --query 'Instances[0].InstanceId' --output text)
        echo "Instance ID: $instance_id"
        # Wait for the instance to enter the running state
        aws ec2 wait instance-running --instance-ids $instance_id
        # Output the public IP of the instance
        public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
        echo "Instance Public IP: $public_ip"

    # ... other steps ...

    - name: Cleanup
      if: always()
      run: |
        # Assuming that the instance_id is still in the environment
        aws ec2 terminate-instances --instance-ids $instance_id
        # Wait for the instance to be terminated
        aws ec2 wait instance-terminated --instance-ids $instance_id

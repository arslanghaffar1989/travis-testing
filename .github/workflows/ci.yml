name: Continuous Integration and Deployment

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup PHP and remove PostgreSQL
        run: |
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update
          sudo apt-get --yes remove postgresql\*

      - name: Setup PostgreSQL
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt -y update
          sudo apt-get install -y postgresql-14 postgresql-client-14 libxml2-dev
          sed -e 's/^port.*/port = 5432/' /etc/postgresql/14/main/postgresql.conf > postgresql.conf
          sudo chown postgres postgresql.conf
          sudo mv postgresql.conf /etc/postgresql/14/main
          sudo sed '0,/127.0.0.1/{s/scram-sha-256/trust/}' /etc/postgresql/14/main/pg_hba.conf > pg_hba.conf
          sudo chown postgres pg_hba.conf
          sudo mv pg_hba.conf /etc/postgresql/14/main
          sudo service postgresql restart 14

  deploy:
    needs: build-and-test
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && env.STAGING_DEPLOY_ON == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to staging
        run: echo "Deploying to staging server..."
env:
  STAGING_DEPLOY_ON: false # This can be set to 'true' in the GitHub repository secrets if staging deployment should run.
